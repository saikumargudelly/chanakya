{"version":3,"sources":["components/ChatBox.jsx","components/BudgetForm.jsx","components/MoodTracker.jsx","components/Dashboard.jsx","components/Sidebar.jsx","App.jsx","index.js"],"names":["ChatBox","messages","setMessages","useState","input","setInput","loading","setLoading","chatEndRef","useRef","useEffect","_chatEndRef$current","current","scrollIntoView","behavior","_jsxs","className","children","_jsx","map","msg","i","sender","text","ref","onSubmit","async","e","preventDefault","trim","userMsg","msgs","res","axios","post","message","data","response","err","value","onChange","target","placeholder","disabled","type","BudgetForm","income","setIncome","expenses","setExpenses","feedback","setFeedback","required","moods","label","MoodTracker","selectedMood","setSelectedMood","m","onClick","mood","handleMood","Dashboard","Sidebar","href","App","id","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.3b2d1673.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nconst ChatBox = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const chatEndRef = useRef(null);\n\n  useEffect(() => {\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMsg = { sender: 'user', text: input };\n    setMessages((msgs) => [...msgs, userMsg]);\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:5001/chat', { message: input });\n      setMessages((msgs) => [...msgs, { sender: 'chanakya', text: res.data.response }]);\n    } catch (err) {\n      setMessages((msgs) => [...msgs, { sender: 'chanakya', text: 'Sorry, something went wrong.' }]);\n    }\n    setInput('');\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"p-6 bg-white dark:bg-gray-800 rounded-2xl shadow-lg border border-gray-100 dark:border-gray-700\">\n      <h2 className=\"text-2xl font-bold mb-4 text-indigo-700 dark:text-indigo-300 tracking-tight flex items-center gap-2\">\n        <span>🤖</span> Ask Chanakya Anything\n      </h2>\n      <div className=\"mb-4 max-h-60 overflow-y-auto space-y-2\">\n        {messages.map((msg, i) => (\n          <div key={i} className={`flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}>\n            <span className={`inline-block px-4 py-2 rounded-2xl shadow text-base max-w-xs break-words\n              ${msg.sender === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200'}`}>{msg.text}</span>\n          </div>\n        ))}\n        <div ref={chatEndRef} />\n      </div>\n      <form onSubmit={sendMessage} className=\"flex gap-2 mt-2\">\n        <input\n          className=\"flex-1 px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-900 focus:ring-2 focus:ring-indigo-200 dark:focus:ring-indigo-700 transition\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          placeholder=\"Ask Chanakya anything...\"\n          disabled={loading}\n        />\n        <button type=\"submit\" disabled={loading || !input.trim()} className=\"px-4 py-2 rounded-lg bg-gradient-to-r from-indigo-500 to-blue-600 text-white font-semibold shadow hover:from-indigo-600 hover:to-blue-700 disabled:opacity-50 transition\">{loading ? '...' : 'Send'}</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatBox;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst BudgetForm = () => {\n  const [income, setIncome] = useState('');\n  const [expenses, setExpenses] = useState('');\n  const [feedback, setFeedback] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setFeedback('');\n    try {\n      const res = await axios.post('http://localhost:5001/budget', { income, expenses });\n      setFeedback(res.data.message);\n    } catch (err) {\n      setFeedback('Failed to submit budget.');\n    }\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 border border-gray-100 dark:border-gray-700\">\n      <h2 className=\"text-2xl font-bold mb-4 text-green-700 dark:text-green-300 tracking-tight flex items-center gap-2\">\n        <span>💸</span> Budget Tracker\n      </h2>\n      <form className=\"flex flex-col gap-3\" onSubmit={handleSubmit}>\n        <input\n          type=\"number\"\n          className=\"px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-900 focus:ring-2 focus:ring-green-200 dark:focus:ring-green-700 transition\"\n          placeholder=\"Monthly Income\"\n          value={income}\n          onChange={e => setIncome(e.target.value)}\n          required\n        />\n        <input\n          type=\"text\"\n          className=\"px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-900 focus:ring-2 focus:ring-green-200 dark:focus:ring-green-700 transition\"\n          placeholder=\"Expenses (comma-separated: rent, food, ... )\"\n          value={expenses}\n          onChange={e => setExpenses(e.target.value)}\n          required\n        />\n        <button type=\"submit\" className=\"px-4 py-2 rounded-lg bg-gradient-to-r from-green-500 to-emerald-600 text-white font-semibold shadow hover:from-green-600 hover:to-emerald-700 transition\">Log Budget</button>\n      </form>\n      {feedback && <div className=\"mt-3 text-sm font-medium text-green-600 dark:text-green-400 animate-pulse\">{feedback}</div>}\n    </div>\n  );\n};\n\nexport default BudgetForm;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst moods = [\n  { label: '😊 Happy', value: 'happy' },\n  { label: '😐 Neutral', value: 'neutral' },\n  { label: '😔 Sad', value: 'sad' },\n  { label: '😠 Stressed', value: 'stressed' },\n];\n\nconst MoodTracker = () => {\n  const [selectedMood, setSelectedMood] = useState('');\n  const [feedback, setFeedback] = useState('');\n\n  const handleMood = async (mood) => {\n    setSelectedMood(mood);\n    setFeedback('');\n    try {\n      const res = await axios.post('http://localhost:5001/mood', { mood });\n      setFeedback(res.data.message);\n    } catch {\n      setFeedback('Failed to log mood.');\n    }\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 border border-gray-100 dark:border-gray-700\">\n      <h2 className=\"text-2xl font-bold mb-4 text-blue-700 dark:text-blue-300 tracking-tight flex items-center gap-2\">\n        <span>🧘‍♂️</span> Mood Tracker\n      </h2>\n      <div className=\"flex gap-3 mb-4 flex-wrap\">\n        {moods.map(m => (\n          <button\n            key={m.value}\n            className={`px-4 py-2 rounded-xl border font-semibold focus:outline-none shadow-sm transition-all duration-150 text-lg flex items-center gap-1\n              ${selectedMood === m.value ? 'bg-blue-500 text-white border-blue-700 scale-105' : 'bg-gray-100 dark:bg-gray-900 border-gray-300 dark:border-gray-600 hover:bg-blue-100 dark:hover:bg-blue-900'}`}\n            onClick={() => handleMood(m.value)}\n          >\n            {m.label}\n          </button>\n        ))}\n      </div>\n      {feedback && <div className=\"text-blue-600 dark:text-blue-300 text-sm font-medium animate-pulse\">{feedback}</div>}\n    </div>\n  );\n};\n\nexport default MoodTracker;\n","import React from 'react';\n// import { Bar } from 'react-chartjs-2'; // Or use Recharts\n\nconst Dashboard = () => {\n  // Placeholder for chart data\n  // Replace with actual API data\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 mb-6 border border-gray-100 dark:border-gray-700\">\n      <h2 className=\"text-2xl font-bold mb-3 text-purple-700 dark:text-purple-300 tracking-tight flex items-center gap-2\">\n        <span>📊</span> Dashboard\n      </h2>\n      <div className=\"text-gray-500 dark:text-gray-400 mb-2\">Charts and summary coming soon...</div>\n      {/*\n      <Bar data={...} options={...} />\n      */}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\n\nconst Sidebar = () => (\n  <aside className=\"h-screen w-56 bg-gray-900 text-white flex flex-col p-4 shadow-lg fixed left-0 top-0 z-10\">\n    <div className=\"mb-10 flex items-center gap-2\">\n      <span className=\"text-2xl\">💡</span>\n      <span className=\"text-xl font-bold tracking-wide\">Chanakya</span>\n    </div>\n    <nav className=\"flex flex-col gap-4\">\n      <a href=\"#dashboard\" className=\"hover:bg-gray-800 rounded px-3 py-2 transition\">Dashboard</a>\n      <a href=\"#budget\" className=\"hover:bg-gray-800 rounded px-3 py-2 transition\">Budget Tracker</a>\n      <a href=\"#mood\" className=\"hover:bg-gray-800 rounded px-3 py-2 transition\">Mood Tracker</a>\n      <a href=\"#chat\" className=\"hover:bg-gray-800 rounded px-3 py-2 transition\">Ask Chanakya</a>\n    </nav>\n    <div className=\"mt-auto text-xs text-gray-400 pt-10\">AI Financial Coach</div>\n  </aside>\n);\n\nexport default Sidebar;\n","import React from 'react';\nimport ChatBox from './components/ChatBox';\nimport BudgetForm from './components/BudgetForm';\nimport MoodTracker from './components/MoodTracker';\nimport Dashboard from './components/Dashboard';\nimport Sidebar from './components/Sidebar';\n\n\nfunction App() {\n  return (\n    <div className=\"min-h-screen bg-gray-900 flex\">\n      <Sidebar />\n      <main className=\"flex-1 ml-56 p-8 bg-gray-900 text-gray-100 min-h-screen\">\n        <h1 className=\"text-3xl font-bold mb-8 mt-2\">Chanakya – AI Financial Wellness Coach</h1>\n        <section id=\"dashboard\" className=\"mb-8\">\n          <Dashboard />\n        </section>\n        <section className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-8\">\n          <div id=\"budget\"><BudgetForm /></div>\n          <div id=\"mood\"><MoodTracker /></div>\n        </section>\n        <section id=\"chat\">\n          <ChatBox />\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}