"""Update user table for profile fields

Revision ID: 5dfc1335134c
Revises: 0e806aa22266
Create Date: 2025-05-11 22:01:05.987285

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5dfc1335134c'
down_revision: Union[str, None] = '0e806aa22266'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    from alembic import op
    import sqlalchemy as sa

    # Email column already exists, do not add again
    # with op.batch_alter_table('users', schema=None) as batch_op:
    #     batch_op.add_column(sa.Column('email', sa.String(), nullable=True))
    # Mobile number column already exists, do not add again
    # with op.batch_alter_table('users', schema=None) as batch_op:
    #     batch_op.add_column(sa.Column('mobile_number', sa.String(), nullable=True))
    # Address column may already exist, do not add again
    # with op.batch_alter_table('users', schema=None) as batch_op:
    #     batch_op.add_column(sa.Column('address', sa.String(), nullable=True))
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('username')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_unique_constraint('uq_users_email', ['email'])



def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('username', sa.VARCHAR(), nullable=True))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'address')
    op.drop_column('users', 'mobile_number')
    op.drop_column('users', 'email')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    # ### end Alembic commands ###
